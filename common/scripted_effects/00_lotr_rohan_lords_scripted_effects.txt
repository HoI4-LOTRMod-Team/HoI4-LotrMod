# region_1: The Wold
# region_2: Eastemnet
# region_3: Westemnet
# region_4: Westmarch
# region_5: Eastfold/Anorien


# @docs(Horselords): Appoints THIS as governor of the Wold (only some characters work)
rohan_lords_set_as_region_1_leader = {
	custom_effect_tooltip = rohan_lords_set_as_region_1_leader_tt
	var:ROH.region_1_leader = { clr_character_flag = is_horselord }
	set_character_flag = is_horselord
	set_variable = { ROH.region_1_leader = THIS }
}

# @docs(Horselords): Appoints THIS as governor of Eastemnet (only some characters work)
rohan_lords_set_as_region_2_leader = {
	custom_effect_tooltip = rohan_lords_set_as_region_2_leader_tt
	var:ROH.region_2_leader = { clr_character_flag = is_horselord }
	set_character_flag = is_horselord
	set_variable = { ROH.region_2_leader = THIS }
}

# @docs(Horselords): Appoints THIS as governor of Westemnet (only some characters work)
rohan_lords_set_as_region_3_leader = {
	custom_effect_tooltip = rohan_lords_set_as_region_3_leader_tt
	var:ROH.region_3_leader = { clr_character_flag = is_horselord }
	set_character_flag = is_horselord
	set_variable = { ROH.region_3_leader = THIS }
}

# @docs(Horselords): Appoints THIS as governor of the Westmarch (only some characters work)
rohan_lords_set_as_region_4_leader = {
	custom_effect_tooltip = rohan_lords_set_as_region_4_leader_tt
	var:ROH.region_4_leader = { clr_character_flag = is_horselord }
	set_character_flag = is_horselord
	set_variable = { ROH.region_4_leader = THIS }
}

# @docs(Horselords): Appoints THIS as governor of the Eastfold (only some characters work)
rohan_lords_set_as_region_5_leader = {
	custom_effect_tooltip = rohan_lords_set_as_region_5_leader_tt
	var:ROH.region_5_leader = { clr_character_flag = is_horselord }
	set_character_flag = is_horselord
	set_variable = { ROH.region_5_leader = THIS }
}



# Opens/Closes the details view
rohan_lords_toggle_details_view = {
	custom_effect_tooltip = rohan_lords_toggle_details_view_tt
	if = {
		limit = { has_country_flag = ring_details_view_open }
		clr_country_flag = ring_details_view_open
	}
	if = {
		limit = { has_country_flag = elven_alliance_details_view_open }
		clr_country_flag = elven_alliance_details_view_open
	}
	if = {
		limit = { has_country_flag = rohan_lords_details_view_open }
		clr_country_flag = rohan_lords_details_view_open
	}
	# To keep the UI clean and smooth, we won't allow this to open when interception_form is open
	else_if = {
		limit = { NOT = { has_country_flag = ring_interception_form_open } }
		set_country_flag = rohan_lords_details_view_open
	}
}



# Updates modifiers. Runs weekly
# Isn't HoI4 code just... beautiful :')
rohan_lords_update_regions = {

	set_variable = { region_1_modifier = region_1_investment_bonus }
	set_variable = { region_1_approval_bonus = -0.2 }
	if = { limit = { region_1_trigger_1 = yes } add_to_variable = { region_1_approval_bonus = 0.1 } }
	if = { limit = { region_1_trigger_2 = yes } add_to_variable = { region_1_approval_bonus = 0.1 } }
	if = { limit = { region_1_trigger_3 = yes } add_to_variable = { region_1_approval_bonus = 0.1 } }
	if = { limit = { region_1_trigger_4 = yes } add_to_variable = { region_1_approval_bonus = 0.1 } }
	set_variable = { region_1_demands_met = region_1_approval_bonus } # Converting from [-0.2, 0.2] to [1, 5] to calculate the frame of our progress bar spritesheet
	multiply_variable = { region_1_demands_met = 10 }
	add_to_variable = { region_1_demands_met = 2 }

	set_variable = { region_2_modifier = region_2_investment_bonus }
	set_variable = { region_2_approval_bonus = -0.2 }
	if = { limit = { region_2_trigger_1 = yes } add_to_variable = { region_2_approval_bonus = 0.1 } }
	if = { limit = { region_2_trigger_2 = yes } add_to_variable = { region_2_approval_bonus = 0.1 } }
	if = { limit = { region_2_trigger_3 = yes } add_to_variable = { region_2_approval_bonus = 0.1 } }
	if = { limit = { region_2_trigger_4 = yes } add_to_variable = { region_2_approval_bonus = 0.1 } }
	set_variable = { region_2_demands_met = region_2_approval_bonus } # Converting from [-0.2, 0.2] to [1, 5] to calculate the frame of our progress bar spritesheet
	multiply_variable = { region_2_demands_met = 10 }
	add_to_variable = { region_2_demands_met = 2 }

	set_variable = { region_3_modifier = region_3_investment_bonus }
	set_variable = { region_3_approval_bonus = -0.2 }
	if = { limit = { region_3_trigger_1 = yes } add_to_variable = { region_3_approval_bonus = 0.1 } }
	if = { limit = { region_3_trigger_2 = yes } add_to_variable = { region_3_approval_bonus = 0.1 } }
	if = { limit = { region_3_trigger_3 = yes } add_to_variable = { region_3_approval_bonus = 0.1 } }
	if = { limit = { region_3_trigger_4 = yes } add_to_variable = { region_3_approval_bonus = 0.1 } }
	set_variable = { region_3_demands_met = region_3_approval_bonus } # Converting from [-0.2, 0.2] to [1, 5] to calculate the frame of our progress bar spritesheet
	multiply_variable = { region_3_demands_met = 10 }
	add_to_variable = { region_3_demands_met = 2 }

	set_variable = { region_4_modifier = region_4_investment_bonus }
	set_variable = { region_4_approval_bonus = -0.2 }
	if = { limit = { region_4_trigger_1 = yes } add_to_variable = { region_4_approval_bonus = 0.1 } }
	if = { limit = { region_4_trigger_2 = yes } add_to_variable = { region_4_approval_bonus = 0.1 } }
	if = { limit = { region_4_trigger_3 = yes } add_to_variable = { region_4_approval_bonus = 0.1 } }
	if = { limit = { region_4_trigger_4 = yes } add_to_variable = { region_4_approval_bonus = 0.1 } }
	set_variable = { region_4_demands_met = region_4_approval_bonus } # Converting from [-0.2, 0.2] to [1, 5] to calculate the frame of our progress bar spritesheet
	multiply_variable = { region_4_demands_met = 10 }
	add_to_variable = { region_4_demands_met = 2 }

	set_variable = { region_5_modifier = region_5_investment_bonus }
	set_variable = { region_5_approval_bonus = -0.2 }
	if = { limit = { region_5_trigger_1 = yes } add_to_variable = { region_5_approval_bonus = 0.1 } }
	if = { limit = { region_5_trigger_2 = yes } add_to_variable = { region_5_approval_bonus = 0.1 } }
	if = { limit = { region_5_trigger_3 = yes } add_to_variable = { region_5_approval_bonus = 0.1 } }
	if = { limit = { region_5_trigger_4 = yes } add_to_variable = { region_5_approval_bonus = 0.1 } }
	set_variable = { region_5_demands_met = region_5_approval_bonus } # Converting from [-0.2, 0.2] to [1, 5] to calculate the frame of our progress bar spritesheet
	multiply_variable = { region_5_demands_met = 10 }
	add_to_variable = { region_5_demands_met = 2 }

	# Calculate cohesion drift
	set_variable = { realm_cohesion_drift = region_1_approval_bonus }
	add_to_variable = { realm_cohesion_drift = region_2_approval_bonus }
	add_to_variable = { realm_cohesion_drift = region_3_approval_bonus }
	add_to_variable = { realm_cohesion_drift = region_4_approval_bonus }
	add_to_variable = { realm_cohesion_drift = region_5_approval_bonus }
	divide_variable = { realm_cohesion_drift = 5.0 }
}

rohan_lords_apply_cohesion_drift = {
	add_to_variable = {
		realm_cohesion = realm_cohesion_drift
	}
	clamp_variable = {
		var = realm_cohesion
		min = -1
		max = 1
	}
	set_variable = {
		realm_cohesion_modifier = realm_cohesion
	}
	multiply_variable = {
		realm_cohesion_modifier = 0.2
	}
}
