




# @docs(Generic): Retires a character, shows '[Character] dies' as a tooltip
kill_character = {
    custom_effect_tooltip = kill_character_tt
    hidden_effect = {
        retire = yes
        on_character_killed = yes
    }
}


# @docs(Generic): A pseudo on-action that gets called whenever a character dies via the kill_character effect.
on_character_killed = {
    # TODO: Move stuff from ring_combat_kill_character into here

    # TODO: deal with things if Rohan Lords die
}



# @docs(Generic): ROOT steals a technology from THIS
give_steal_tech_from_country = {
    ROOT = {
        steal_random_tech_bonus = {
            category = lotr_infantry
            category = lotr_support_tech
            category = lotr_cavalry
            category = lotr_machines
            category = lotr_knowledge
            category = lotr_labour
            category = lotr_sailing

            ahead_reduction = 0.8
            bonus = 1.2
            base_bonus = 1.1
            dynamic = yes
            name = stolen_tech_bonus
            target = PREV
            uses = 2
        }
    }
}

# @docs(Generic): ROOT gets 20% intel in all categories on THIS
give_intel_on_country = {
    ROOT = {
        add_intel = {
            target = PREV
            civilian_intel = 20
            army_intel = 20
            navy_intel = 20
            airforce_intel = 20
        }
    }
}


# @docs(Generic): Increase a country's centralization law with no pre-requisite checks
increase_centralization = {
    if = { limit = { has_idea = no_centralization } swap_ideas = { add_idea = weak_centralization remove_idea = no_centralization } }
    else_if = { limit = { has_idea = weak_centralization } swap_ideas = { add_idea = moderate_centralization remove_idea = weak_centralization } }
    else_if = { limit = { has_idea = moderate_centralization } swap_ideas = { add_idea = strong_centralization remove_idea = moderate_centralization } }
    else_if = { limit = { has_idea = strong_centralization } swap_ideas = { add_idea = very_strong_centralization remove_idea = strong_centralization } }
    else = { add_political_power = 150 }
}

# @docs(Generic): Decrease a country's centralization law with no pre-requisite checks
decrease_centralization = {
    if = { limit = { has_idea = weak_centralization } swap_ideas = { remove_idea = weak_centralization add_idea = no_centralization } }
    else_if = { limit = { has_idea = moderate_centralization } swap_ideas = { remove_idea = moderate_centralization add_idea = weak_centralization } }
    else_if = { limit = { has_idea = strong_centralization } swap_ideas = { remove_idea = strong_centralization add_idea = moderate_centralization } }
    else_if = { limit = { has_idea = very_strong_centralization } swap_ideas = { remove_idea = very_strong_centralization add_idea = strong_centralization } }
    else = { add_political_power = 100 }
}

# @docs(Generic): Adds a building slot and civilian factory to a state
add_building_slot_and_civ = {
    add_extra_state_shared_building_slots = 1
    add_building_construction = { type = industrial_complex level = 1 instant_build = yes }
}

# @docs(Generic): Adds a building slot and military factory to a state
add_building_slot_and_mil = {
    add_extra_state_shared_building_slots = 1
    add_building_construction = { type = arms_factory level = 1 instant_build = yes }
}

# @docs(Generic): Adds 2 building slots and civilian factories to a state
add_building_slot_and_civ_x2 = {
    add_extra_state_shared_building_slots = 2
    add_building_construction = { type = industrial_complex level = 2 instant_build = yes }
}

# @docs(Generic): Adds 2 building slots and military factories to a state
add_building_slot_and_mil_x2 = {
    add_extra_state_shared_building_slots = 2
    add_building_construction = { type = arms_factory level = 2 instant_build = yes }
}

# @docs(Generic): Adds 3 building slots and civilian factories to a state
add_building_slot_and_civ_x3 = {
    add_extra_state_shared_building_slots = 3
    add_building_construction = { type = industrial_complex level = 3 instant_build = yes }
}

# @docs(Generic): Adds 3 building slots and military factories to a state
add_building_slot_and_mil_x3 = {
    add_extra_state_shared_building_slots = 3
    add_building_construction = { type = arms_factory level = 3 instant_build = yes }
}

# @docs(Generic): Adds 4 building slots and civilian factories to a state
add_building_slot_and_civ_x4 = {
    add_extra_state_shared_building_slots = 4
    add_building_construction = { type = industrial_complex level = 4 instant_build = yes }
}

# @docs(Generic): Adds 4 building slots and military factories to a state
add_building_slot_and_mil_x4 = {
    add_extra_state_shared_building_slots = 4
    add_building_construction = { type = arms_factory level = 4 instant_build = yes }
}

# @docs(Moria): Kill/Retire the Durin's Bane character (Does not remove the state modifiers)
kill_durins_bane = {
    MOA = { MOA_bane = { kill_character = yes } }
    hidden_effect = {
        set_global_flag = durins_bane_dead
        MOC = { MOC_bane = { retire = yes } }
        news_event = { id = news.393 days = 7 }
    }
}

# @docs(Moria): Remove the "Loose Balrog" state modifiers from moria
remove_durins_bane_from_moria = {
    73 = { remove_dynamic_modifier = { modifier = moria_loose_balrog } }
    134 = { remove_dynamic_modifier = { modifier = moria_loose_balrog } }
}

# @docs(Generic): Add a building slot and civilian factory to a random controlled state
random_state_add_building_slot_and_civ = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_civ_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 1
            add_building_construction = { type = industrial_complex level = 1 instant_build = yes }
        }
    }
}

# @docs(Generic): Add a building slot and military factory to a random controlled state
random_state_add_building_slot_and_mil = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_mil_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 1
            add_building_construction = { type = arms_factory level = 1 instant_build = yes }
        }
    }
}

# @docs(Generic): Add a building slot and dockyard factory to a random controlled state
random_state_add_building_slot_and_doc = {
    random_controlled_state = {
        limit = { is_coastal = yes }
        custom_effect_tooltip = random_state_add_building_slot_and_doc_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 2
            add_building_construction = { type = dockyard level = 1 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 2 building slots and civilian factories to a random controlled state
random_state_add_building_slot_and_civ_x2 = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_civ_x2_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 2
            add_building_construction = { type = industrial_complex level = 2 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 2 building slots and military factories to a random controlled state
random_state_add_building_slot_and_mil_x2 = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_mil_x2_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 2
            add_building_construction = { type = arms_factory level = 2 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 2 building slots and dockyard factories to a random controlled state
random_state_add_building_slot_and_doc_x2 = {
    random_controlled_state = {
        limit = { is_coastal = yes }
        custom_effect_tooltip = random_state_add_building_slot_and_doc_x2_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 2
            add_building_construction = { type = dockyard level = 2 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 3 building slots and civilian factories to a random controlled state
random_state_add_building_slot_and_civ_x3 = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_civ_x3_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 3
            add_building_construction = { type = industrial_complex level = 3 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 3 building slots and military factories to a random controlled state
random_state_add_building_slot_and_mil_x3 = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_mil_x3_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 3
            add_building_construction = { type = arms_factory level = 3 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 3 building slots and dockyard factories to a random controlled state
random_state_add_building_slot_and_doc_x3 = {
    random_controlled_state = {
        limit = { is_coastal = yes }
        custom_effect_tooltip = random_state_add_building_slot_and_doc_x3_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 3
            add_building_construction = { type = dockyard level = 3 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 4 building slots and civilian factories to a random controlled state
random_state_add_building_slot_and_civ_x4 = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_civ_x4_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 4
            add_building_construction = { type = industrial_complex level = 4 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 4 building slots and military factories to a random controlled state
random_state_add_building_slot_and_mil_x4 = {
    random_controlled_state = {
        custom_effect_tooltip = random_state_add_building_slot_and_mil_x4_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 4
            add_building_construction = { type = arms_factory level = 4 instant_build = yes }
        }
    }
}

# @docs(Generic): Add 4 building slots and dockyard factories to a random controlled state
random_state_add_building_slot_and_doc_x4 = {
    random_controlled_state = {
        limit = { is_coastal = yes }
        custom_effect_tooltip = random_state_add_building_slot_and_doc_x4_tt
        hidden_effect = {
            add_extra_state_shared_building_slots = 4
            add_building_construction = { type = dockyard level = 4 instant_build = yes }
        }
    }
}

# @docs(Generic): Send and event to a country inviting them to your faction
invite_to_faction = {
    country_event = { id = lotr_generic.11 days = 1 }
}

# @docs(Generic): Send and event to a country asking to join their faction
ask_to_join_faction = {
    country_event = { id = lotr_generic.8 days = 1 }
}

# @docs(Generic): Temporarily store the ideologies of ROOT. You can use `restore_ideologies_post_puppeting` to restore said ideologies after being puppeted.
store_ideologies_before_puppeting = {
    get_current_ideology_popularities = yes
    get_current_ruling_party = yes
}

# @docs(Generic): Restore the ideologies of ROOT that it had *before* being puppeted. You have to run `store_ideologies_before_puppeting` before.
restore_ideologies_post_puppeting = {
    # if this is run the same frame as store_ideologies the game crashes, that's why we do it next frame through a hidden event
    ROOT = { country_event = { id = generic.26 hours = 1 } }
}

get_current_ideology_popularities = {
    set_variable = { ROOT.revo_support_before_change = ROOT.party_popularity_100@revolutionary }
    set_variable = { ROOT.coop_support_before_change = ROOT.party_popularity_100@cooperative }
    set_variable = { ROOT.bell_support_before_change = ROOT.party_popularity_100@belligerent }
    set_variable = { ROOT.unal_support_before_change = ROOT.party_popularity_100@unaligned }
}
get_current_ruling_party = {
    set_variable = { ROOT.ruling_ideology_before_change = ROOT.current_party_ideology_group }
}

restore_ideology_popularities = {
    hidden_effect = {
        # Reset popluarities to what they were before puppeting 
        set_popularities = {
            revolutionary = ROOT.revo_support_before_change
            cooperative = ROOT.coop_support_before_change
            belligerent = ROOT.bell_support_before_change
            unaligned = ROOT.unal_support_before_change
        }
        clear_variable = ROOT.revo_support_before_change
        clear_variable = ROOT.coop_support_before_change
        clear_variable = ROOT.bell_support_before_change
        clear_variable = ROOT.unal_support_before_change
    }
}
restore_ruling_party = {
    ROOT = {
        set_politics = {
            ruling_party = var:ROOT.ruling_ideology_before_change
            #ruling_party = revolutionary
        }
        clear_variable = ROOT.ruling_ideology_before_change
    }
}

# @docs(Generic): reduces tax-law to low (unless it is none) and disallows a higher tax law
disallow_medium_and_low_taxes = {
    if = {
        limit = { NOT = { has_idea = no_taxes } NOT = { has_idea = low_taxes } }
        add_ideas = low_taxes
    }
    custom_effect_tooltip = "disallow_medium_and_low_taxes_tt"
    set_country_flag = medium_and_low_taxes_not_allowed
}

# @docs(Generic): reduces tax-law to low (unless it is none) and disallows a higher tax law for a year
disallow_medium_and_low_taxes_1y = {
    if = {
        limit = { NOT = { has_idea = no_taxes } NOT = { has_idea = low_taxes } }
        add_ideas = low_taxes
    }
    custom_effect_tooltip = "disallow_medium_and_low_taxes_1y_tt"
    set_country_flag = {
        flag = medium_and_low_taxes_not_allowed
        days = 370
    }
}