debug_decisions = {

	begin_ring_mechanic = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			NOT = {
				has_global_flag = fs_started
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			execute_fs_commence = yes
			set_country_flag = lth_nonelves_activated
		}
	}

	ring_seize = {
		icon = generic_research
		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			NOT = {
				has_global_flag = fs_ring_seized
			}
		}

		fire_only_once = no
		cost = 0
		complete_effect = {
			ring_seize_ring = yes
		}
	}

	ring_corruption_down_debug = {
		icon = generic_research
		available = {
			is_ai = no
			is_debug = yes
		}
		visible = {
			has_global_flag = fs_ring_seized
		}
		fire_only_once = no
		cost = 0
		complete_effect = {
			ring_corruption_percentage_down = yes
		}
	}

	ring_corruption_up_debug = {
		icon = generic_research
		available = {
			is_ai = no
			is_debug = yes
		}
		visible = {
			has_global_flag = fs_ring_seized
		}
		fire_only_once = no
		cost = 0
		complete_effect = {
			ring_corruption_percentage_up = yes
		}
	}

	ring_move_to_next_state = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			SHI = { execute_fellowship_step = yes }
		}
	}

	ring_destroyed = {
		available = {
			is_ai = no
			is_debug = yes
		}
		fire_only_once = no
		cost = 0
		complete_effect = {
			ring_destroy_ring = yes
		}
	}

	testeroo = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			#log = "[THIS.GetName]"

			set_temp_variable = { temp_max_prio = -999 }
			set_temp_variable = { temp_max_state = capital }

			for_each_scope_loop = {
				array = controlled_states
				
				if = {
					limit = {
						check_variable = { temp_max_prio < mtth:state_air_base_priority }
					}
					set_temp_variable = { temp_max_prio = mtth:state_air_base_priority }
					set_temp_variable = { temp_max_state = THIS }
				}
			}

			var:temp_max_state = {
				add_building_construction = {
					type = air_base
					level = 1
				}
			}
		}
	}


	activate_ithilien_crisis = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			OR = {
				tag = MOR
				tag = GON
			}
		}

		visible = {
			OR = {
				tag = MOR
				tag = GON
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			ithc_commence_ithilien_crisis = yes
		}
	}

	kill_aragorn = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = GON
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			SHI = { FS_aragorn = { ring_combat_kill_character = yes } }
		}
	}

	set_mordor_orcs_flag_true = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = ANG
		}

		visible = {
			always = yes
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			MOR = { set_country_flag = MOR_orcs_have_taken_over_mordor }
		}
	}

	unlock_angmar_balance_of_power = {
		icon = generic_research

		available = {
			is_ai = no
			is_debug = yes
			tag = ANG
		}

		visible = { tag = ANG }

		fire_only_once = no
		cost = 0

		complete_effect = {
			set_power_balance = { id = power_balance_ang }
		}
	}

	temp_decision = {
		icon = generic_research

		available = {
			#is_ai = no
			is_debug = yes
		}

		visible = { always = yes }
		fire_only_once = no
		cost = 0
		
		complete_effect = {
			log = "[?max_manpower_k]"
		}
	}
		

}
