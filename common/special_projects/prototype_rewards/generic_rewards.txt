@base_reward_weight = 2 #Base Reward weight value
@reward_weight_factor_theme = 0.25 # Applied to factor - Used to reduce chances of repeating the same reward theme within the same project (ie. Failure 1 & Failure 2)




# LIST OF GENERIC REWARDS BELOW:
# sp_generic_reward_scientist_xp_1
# sp_generic_reward_scientist_xp_2
# sp_generic_reward_scientist_xp_3
# sp_generic_reward_army_xp_1
# sp_generic_reward_army_xp_2
# sp_generic_reward_army_xp_3
# sp_generic_reward_navy_xp_1
# sp_generic_reward_navy_xp_2
# sp_generic_reward_navy_xp_3
# sp_generic_reward_air_xp_1
# sp_generic_reward_air_xp_2
# sp_generic_reward_air_xp_3
# sp_generic_reward_major_progress_1
# sp_generic_reward_major_progress_2
# sp_generic_reward_major_progress_3
# sp_generic_reward_test_failure_1
# sp_generic_reward_test_failure_2
# sp_generic_reward_test_failure_3
# sp_generic_reward_resource_scarcity
# sp_generic_reward_critical_failure
# sp_generic_reward_political_interference
# sp_generic_reward_major_failure
# sp_generic_reward_minor_explosion
# sp_generic_reward_fire
# sp_generic_reward_infantry_weapons_tech
# sp_generic_reward_infantry_archery_tech
# sp_generic_reward_support_tech_tech
# sp_generic_reward_cavalry_tech
# sp_generic_reward_machines_siege_equipment_tech
# sp_generic_reward_knowledge_alchemy_tech
# sp_generic_reward_knowledge_magic_tech
# sp_generic_reward_knowledge_scriptorium_tech
# sp_generic_reward_knowledge_intrigue_tech
# sp_generic_reward_labour_metalworking_tech
# sp_generic_reward_labour_metalworking_mining_tech
# sp_generic_reward_labour_construction_tech
# sp_generic_reward_labour_farming_tech
# sp_generic_reward_sailing_tech
# sp_generic_reward_eagles_tech
# sp_generic_reward_fellbeasts_tech
# sp_generic_reward_elven_secrets_tech
# sp_generic_reward_dwarven_secrets_tech
# sp_generic_reward_men_secrets_tech
# sp_generic_reward_orcs_secrets_tech







#Low Scientist XP gain
sp_generic_reward_scientist_xp_1 = {

	fire_only_once = yes

	threshold = {
		min = 0
		max = 100
	}

	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_scientist_xp_flag
		}
		modifier = {
			factor = 0
			var:scientist = {
				has_scientist_level = {
					level > 4
					specialization = specialization_laboratory
				}
			}
		}
	}
	
	option = {
		token = sp_generic_reward_option_scientist_xp
		
		iteration_output = {
			scientist_effects = {
				if = {
					limit = {
						
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
				FROM = { set_project_flag = sp_generic_reward_scientist_xp_flag }
			}
		}
	}
}

#Medium Scientist XP gain
sp_generic_reward_scientist_xp_2 = {

	fire_only_once = yes

	threshold = {
		min = 0
		max = 100
	}

	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_scientist_xp_flag
		}
		modifier = {
			factor = 0
			var:scientist = {
				has_scientist_level = {
					level > 4
					specialization = specialization_laboratory
				}
			}
		}
	}
	
	option = {
		token = sp_generic_reward_option_scientist_xp
		
		iteration_output = {
			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.medium
						specialization = specialization_laboratory
					}
				}
				FROM = { set_project_flag = sp_generic_reward_scientist_xp_flag }
			}
		}
	}
}

#High Scientist XP gain
sp_generic_reward_scientist_xp_3 = {

	fire_only_once = yes

	threshold = {
		min = 0
		max = 100
	}

	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_scientist_xp_flag
		}
		modifier = {
			factor = 0
			var:scientist = {
				has_scientist_level = {
					level > 4
					specialization = specialization_laboratory
				}
			}
		}
	}
	
	option = {
		token = sp_generic_reward_option_scientist_xp
		
		iteration_output = {
			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.high
						specialization = specialization_laboratory
					}
				}
				FROM = { set_project_flag = sp_generic_reward_scientist_xp_flag }
			}

			country_effects = {
				add_breakthrough_progress = {
					specialization = specialization_laboratory
					value = sp_breakthrough_progress.medium
				}
			}
		}
	}
}


#Low Army XP
sp_generic_reward_army_xp_1 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_army_xp_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_army_xp
		
		iteration_output = {
			country_effects = {
				army_experience = constant:sp_military_xp_gain.low
				FROM = { set_project_flag = sp_generic_reward_army_xp_flag }
			}
		}
	}
}

#medium Army XP
sp_generic_reward_army_xp_2 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_army_xp_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_army_xp
		
		iteration_output = {
			country_effects = {
				army_experience = constant:sp_military_xp_gain.medium
				FROM = { set_project_flag = sp_generic_reward_army_xp_flag }
			}
		}
	}
}

#High Army XP
sp_generic_reward_army_xp_3 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_army_xp_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_army_xp
		
		iteration_output = {
			country_effects = {
				army_experience = constant:sp_military_xp_gain.high
				
				add_breakthrough_progress = {
					specialization = specialization_laboratory
					value = sp_breakthrough_progress.medium
				}

				FROM = { set_project_flag = sp_generic_reward_army_xp_flag }
			}
		}
	}
}


#Low navy XP
sp_generic_reward_navy_xp_1 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_navy_xp_flag
		}
	}
	
	option = {
		token = sp_generic_generic_reward_option_navy_xp
		
		iteration_output = {
			country_effects = {
				navy_experience = constant:sp_military_xp_gain.low
				FROM = { set_project_flag = sp_generic_reward_navy_xp_flag }
			}
		}
	}
}

#medium navy XP
sp_generic_reward_navy_xp_2 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_navy_xp_flag
		}
	}
	
	option = {
		token = sp_generic_generic_reward_option_navy_xp
		
		iteration_output = {
			country_effects = {
				navy_experience = constant:sp_military_xp_gain.medium
				FROM = { set_project_flag = sp_generic_reward_navy_xp_flag }
			}
		}
	}
}

#High navy XP
sp_generic_reward_navy_xp_3 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_navy_xp_flag
		}
	}
	
	option = {
		token = sp_generic_generic_reward_option_navy_xp
		
		iteration_output = {
			country_effects = {
				navy_experience = constant:sp_military_xp_gain.high
				
				add_breakthrough_progress = {
					specialization = specialization_laboratory
					value = sp_breakthrough_progress.medium
				}

				FROM = { set_project_flag = sp_generic_reward_navy_xp_flag }
			}
		}
	}
}


#Low air XP
sp_generic_reward_air_xp_1 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_air_xp_flag
		}
	}
	
	option = {
		token = sp_generic_generic_reward_option_air_xp
		
		iteration_output = {
			country_effects = {
				air_experience = constant:sp_military_xp_gain.low
				FROM = { set_project_flag = sp_generic_reward_air_xp_flag }
			}
		}
	}
}

#medium air XP
sp_generic_reward_air_xp_2 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_air_xp_flag
		}
	}
	
	option = {
		token = sp_generic_generic_reward_option_air_xp
		
		iteration_output = {
			country_effects = {
				air_experience = constant:sp_military_xp_gain.medium
				FROM = { set_project_flag = sp_generic_reward_air_xp_flag }
			}
		}
	}
}

#High air XP
sp_generic_reward_air_xp_3 = {
	fire_only_once = yes
	
	threshold = {
		min = 50
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_air_xp_flag
		}
	}
	
	option = {
		token = sp_generic_generic_reward_option_air_xp
		
		iteration_output = {
			country_effects = {
				air_experience = constant:sp_military_xp_gain.high
				
				add_breakthrough_progress = {
					specialization = specialization_laboratory
					value = sp_breakthrough_progress.medium
				}

				FROM = { set_project_flag = sp_generic_reward_air_xp_flag }
			}
		}
	}
}


#Low Extra Progress
sp_generic_reward_major_progress_1 = {
	fire_only_once = yes

	threshold = {
		min = 0
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_major_progress_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_major_breakthrough
		
		iteration_output = {
			country_effects = {
				FROM = {
					add_project_progress_ratio = constant:sp_progress.gain.low				
					
					set_project_flag = sp_generic_reward_major_progress_flag
				}
			}

			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
			}
		}
	}
}

#Medium Extra Progress
sp_generic_reward_major_progress_2 = {
	fire_only_once = yes

	threshold = {
		min = 0
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_major_progress_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_major_breakthrough
		
		iteration_output = {
			country_effects = {
				FROM = {
					add_project_progress_ratio = constant:sp_progress.gain.medium				
					
					set_project_flag = sp_generic_reward_major_progress_flag
				}
			}

			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
			}
		}
	}
}

#High Extra Progress
sp_generic_reward_major_progress_3 = {
	fire_only_once = yes

	threshold = {
		min = 0
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_major_progress_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_major_breakthrough
		
		iteration_output = {
			country_effects = {
				FROM = {
					add_project_progress_ratio = constant:sp_progress.gain.high				
					
					set_project_flag = sp_generic_reward_major_progress_flag
				}

				add_breakthrough_progress = {
					specialization = specialization_laboratory
					value = sp_breakthrough_progress.medium
				}
			}

			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
			}
		}
	}
}


#Low Progress Loss
sp_generic_reward_test_failure_1 = {
	fire_only_once = yes
	
	threshold = {
		min = 15 #Loss is 5
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_test_failure_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_test_failure
		
		iteration_output = {
			country_effects = { 
				FROM = {
					add_project_progress_ratio = constant:sp_progress.loss.low

					set_project_flag = sp_generic_reward_test_failure_flag
				}
			}

			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
			}
		}
	}
}

#Medium Progress Loss
sp_generic_reward_test_failure_2 = {
	fire_only_once = yes
	
	threshold = {
		min = 30 #Loss is 10
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_test_failure_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_test_failure
		
		iteration_output = {
			country_effects = { 
				FROM = {
					add_project_progress_ratio = constant:sp_progress.loss.medium

					set_project_flag = sp_generic_reward_test_failure_flag
				}
			}

			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
			}
		}
	}
}

#High Progress Loss
sp_generic_reward_test_failure_3 = {
	fire_only_once = yes
	
	threshold = {
		min = 50 #Loss is 15
		max = 100
	}
	
	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_test_failure_flag
		}
	}
	
	option = {
		token = sp_generic_reward_option_test_failure
		
		iteration_output = {
			country_effects = { 
				FROM = {
					add_project_progress_ratio = constant:sp_progress.loss.high

					set_project_flag = sp_generic_reward_test_failure_flag
				}

				add_breakthrough_progress = {
					specialization = specialization_laboratory
					value = sp_breakthrough_progress.medium
				}
			}

			scientist_effects = {
				if = {
					limit = {
						has_scientist_level = {
							level < 5
							specialization = specialization_laboratory
						}
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp_gain.low
						specialization = specialization_laboratory
					}
				}
			}
		}
	}
}


sp_generic_reward_resource_scarcity = {
	fire_only_once = yes
	
	threshold = {
		min = 25
		max = 80
	}

	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = 0.5
	}
	
	option = {
		token = sp_generic_reward_option_resource_scarcity
		
		iteration_output = {
			country_effects = { 
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
			}

			scientist_effects = {
				add_scientist_xp = {
					experience = constant:sp_scientist_xp_gain.low
					specialization = specialization_laboratory
				}
			}
		}
	}
}

sp_generic_reward_critical_failure = {
	fire_only_once = yes
	
	threshold = {
		min = 25
		max = 80
	}

	# ROOT is the project
	# FROM is the Country
	# var:facility_state is the State where the facility is (ensured to be set in this case)
	# var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
	# var:scientist is the Scientist (ensured to be set in this case)
	weight = {
		base = 0.25
	}
	
	option = {
		token = sp_generic_reward_option_critical_failure
		
		iteration_output = {
			country_effects = { 
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
			}

			scientist_effects = {
				add_scientist_xp = {
					experience = constant:sp_scientist_xp_gain.low
					specialization = specialization_laboratory
				}
				injure_scientist_for_days = 30
			}

			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.25
					province = var:facility_province_id
				}
			}
		}
	}
}


sp_generic_reward_political_interference = {
	fire_only_once = no
	
	threshold = { 
		min = 0
		max = 70
	}
	
	weight = {
		base = 0.5
		modifier = {
			factor = 2
			FROM = { has_government = belligerent }
		}
	}
	
	option = {
		token = sp_generic_reward_political_interference_option
				
		iteration_output = {
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
			}
		}
	}
}

sp_generic_reward_major_failure = {

	fire_only_once = yes

	threshold = { 
		min = 0
		max = 100
	}

	weight = {
		base = @base_reward_weight
		modifier = {
			factor = @reward_weight_factor_theme
			has_project_flag = sp_generic_reward_major_failure_flag
		}
	}
	
	option = {
		token = sp_generic_reward_major_failure_option
		
		iteration_output = {
			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.15 # levels of damage
				}
			}

			country_effects = {
				FROM = { set_project_flag = sp_generic_reward_major_failure_flag }
			}
		}
	}
}

sp_generic_reward_minor_explosion = {
	fire_only_once = yes
	
	threshold = { 
		min = 20
		max = 40
	}
	
	weight = {
		base = 0.75
	}
	
	option = {
		token = sp_generic_reward_minor_explosion_option
		
		
		iteration_output = {
			scientist_effects = {
				add_scientist_xp = {
					experience = constant:sp_scientist_xp_gain.low
					specialization = specialization_laboratory
				}
			}

			facility_state_effects = { 
				damage_building = {
					tags = facility
					damage = 0.1
					province = var:facility_province_id
				}
			}
		}
	}
}

sp_generic_reward_fire = {
	fire_only_once = yes
	
	threshold = { 
		min = 20
		max = 40
	}
	
	weight = {
		base = 0.75
	}
	
	option = {
		token = sp_generic_reward_fire_option
		
		
		iteration_output = {
			country_effects = { 
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
			}

			scientist_effects = {
				add_scientist_xp = {
					experience = constant:sp_scientist_xp_gain.low
					specialization = specialization_laboratory
				}
				injure_scientist_for_days = 20
			}

			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.15
					province = var:facility_province_id
				}
			}
		}
	}
}

sp_generic_reward_infantry_weapons_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_infantry_weapons_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_infantry_weapons_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_infantry_weapons_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_infantry_weapons
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_infantry_weapons_tech_flag }
                        }
                }
        }
}


sp_generic_reward_infantry_archery_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_infantry_archery_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_infantry_archery_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_infantry_archery_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_infantry_archery
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_infantry_archery_tech_flag }
                        }
                }
        }
}

sp_generic_reward_support_tech_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_support_tech_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_support_tech_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_support_tech_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_support_tech
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_support_tech_tech_flag }
                        }
                }
        }
}

sp_generic_reward_cavalry_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_cavalry_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_cavalry_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_cavalry_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_cavalry
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_cavalry_tech_flag }
                        }
                }
        }
}

sp_generic_reward_machines_siege_equipment_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_machines_siege_equipment_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_machines_siege_equipment_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_machines_siege_equipment_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_machines_siege_equipment
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_machines_siege_equipment_tech_flag }
                        }
                }
        }
}

sp_generic_reward_knowledge_alchemy_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_knowledge_alchemy_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_knowledge_alchemy_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_knowledge_alchemy_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_knowledge_alchemy
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_knowledge_alchemy_tech_flag }
                        }
                }
        }
}

sp_generic_reward_knowledge_magic_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_knowledge_magic_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_knowledge_magic_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_knowledge_magic_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_knowledge_magic
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_knowledge_magic_tech_flag }
                        }
                }
        }
}

sp_generic_reward_knowledge_scriptorium_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_knowledge_scriptorium_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_knowledge_scriptorium_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_knowledge_scriptorium_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_knowledge_scriptorium
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_knowledge_scriptorium_tech_flag }
                        }
                }
        }
}

sp_generic_reward_knowledge_intrigue_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_knowledge_intrigue_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_knowledge_intrigue_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_knowledge_intrigue_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_knowledge_intrigue
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_knowledge_intrigue_tech_flag }
                        }
                }
        }
}

sp_generic_reward_labour_metalworking_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_labour_metalworking_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_labour_metalworking_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_labour_metalworking_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_labour_metalworking
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_labour_metalworking_tech_flag }
                        }
                }
        }
}

sp_generic_reward_labour_metalworking_mining_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_labour_metalworking_mining_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_labour_metalworking_mining_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_labour_metalworking_mining_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_labour_metalworking_mining
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_labour_metalworking_mining_tech_flag }
                        }
                }
        }
}

sp_generic_reward_labour_construction_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_labour_construction_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_labour_construction_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_labour_construction_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_labour_construction
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_labour_construction_tech_flag }
                        }
                }
        }
}

sp_generic_reward_labour_farming_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_labour_farming_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_labour_farming_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_labour_farming_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_labour_farming
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_labour_farming_tech_flag }
                        }
                }
        }
}

sp_generic_reward_sailing_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_sailing_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_sailing_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_sailing_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_sailing
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_sailing_tech_flag }
                        }
                }
        }
}

sp_generic_reward_eagles_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_eagles_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_eagles_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_eagles_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_eagles
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_eagles_tech_flag }
                        }
                }
        }
}

sp_generic_reward_fellbeasts_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_fellbeasts_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_fellbeasts_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_fellbeasts_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_fellbeasts
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_fellbeasts_tech_flag }
                        }
                }
        }
}

sp_generic_reward_elven_secrets_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_elven_secrets_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_elven_secrets_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_elven_secrets_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_elven_secrets
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_elven_secrets_tech_flag }
                        }
                }
        }
}

sp_generic_reward_dwarven_secrets_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_dwarven_secrets_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_dwarven_secrets_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_dwarven_secrets_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_dwarven_secrets
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_dwarven_secrets_tech_flag }
                        }
                }
        }
}

sp_generic_reward_men_secrets_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_men_secrets_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_men_secrets_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_men_secrets_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_men_secrets
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_men_secrets_tech_flag }
                        }
                }
        }
}

sp_generic_reward_orcs_secrets_tech = {
        fire_only_once = yes

        threshold = {
                min = 0
                max = 100
        }

        # ROOT is the project
        # FROM is the Country
        # var:facility_state is the State where the facility is (ensured to be set in this case)
        # var:facility_province_id is the province ID where the facility is (ensured to be set in this case)
        # var:scientist is the Scientist (ensured to be set in this case)
        weight = {
                base = @base_reward_weight
                modifier = {
                        factor = @reward_weight_factor_theme
                        has_project_flag = sp_land_generic_reward_orcs_secrets_tech_flag
                }
        }

        option = {
                token = sp_land_generic_reward_option_orcs_secrets_tech

                iteration_output = {
                        country_effects = {
                                add_tech_bonus = {
                                        name = sp_land_generic_reward_option_orcs_secrets_tech_bonus_name
                                        bonus = 0.1
                                        uses = 1
                                        category = lotr_orcs_secrets
                                }

                                FROM = { set_project_flag = sp_land_generic_reward_orcs_secrets_tech_flag }
                        }
                }
        }
}