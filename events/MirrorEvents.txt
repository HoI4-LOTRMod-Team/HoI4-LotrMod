# Galadriels mirror events

add_namespace = mirror






# Whispers of the Enemy
country_event = {
	id = mirror.1
	title = mirror.1.t
	desc = mirror.1.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# We construct additional fortifications!
	option = {
		name = mirror.1.a
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = fortification_focus days = 90 }
		}
		else = { add_timed_idea = { idea = fortification_focus days = 60 } }
	}
	
	# Send diplomatic emissaries and ask for protection!
	option = {
		name = mirror.1.b
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = diplomacy_focus days = 90 }
		}
		else = { add_timed_idea = { idea = diplomacy_focus days = 60 } }
	}
	
	# Let them try, if they dare.
	option = {
		name = mirror.1.c
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = defense_focus days = 90 }
		}
		else = { add_timed_idea = { idea = defense_focus days = 60 } }
	}
	


}

# The Fellowship of the Ring
country_event = {
	id = mirror.2
	title = mirror.2.t
	desc = mirror.2.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# An inspiring sight!
	option = {
		trigger = {
			NOT = { has_completed_focus = lth_thegreatschism }
			NOT = { has_government = belligerent }
			NOT = { is_ally_with = MOR }
		}
		name = mirror.2.a
		add_stability = 0.1
	}
	
	# They may arrive in Lothlorien before long.
	option = {
		name = mirror.2.b
		add_political_power = 50
	}
	
	# Curse them!
	option = {
		trigger = {
			OR = {
				has_government = belligerent
				is_ally_with = MOR
			}
		}
		name = mirror.2.c
		ring_curse_random_fellowship_member = yes
	}
	


}

# The Halfling and the Ring
country_event = {
	id = mirror.3
	title = mirror.3.t
	desc = mirror.3.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The halfling's strength is an inspiration to us all!
	option = {
		name = mirror.3.a
		trigger = {
			NOT = { has_completed_focus = lth_thegreatschism }
		}
		add_stability = 0.1
		add_war_support = 0.1
	}
	
	# Reach out to him through the veil. Channel into him the positive energy of hopefulness.
	option = {
		name = mirror.3.b
		trigger = {
			NOT = { has_completed_focus = lth_thegreatschism }
			NOT = { has_government = belligerent }
			NOT = { is_ally_with = MOR }
		}
		ring_bless_ringbearer = yes
	}
	
	# Whisper a curse to him.
	option = {
		trigger = {
			OR = {
				has_government = belligerent
				is_ally_with = MOR
			}
		}
		name = mirror.3.c
		ring_curse_random_fellowship_member = yes
	}
}

# The Fall of the Fellowship
country_event = {
	id = mirror.4
	title = mirror.4.t
	desc = mirror.4.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Tragic, but a stark reminder that our enemy is without mercy. Ring or not, we will not yield to Sauron!
	option = {
		name = mirror.4.a
		trigger = {
			NOT = { has_completed_focus = lth_thegreatschism }
			NOT = { has_government = belligerent }
			NOT = { is_ally_with = MOR }
			NOT = { ring_has_the_ring = yes }
		}
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = increased_morale days = 90 }
		}
		else = { add_timed_idea = { idea = increased_morale days = 60 } }
	}
	
	# Elrond's gamble has failed. Now the Ring will decide the fate of empires.
	option = {
		name = mirror.4.b
		ring_rivendell_disapproves = yes
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = bracing_for_war days = 90 }
		}
		else = { add_timed_idea = { idea = bracing_for_war days = 60 } }
	}
	
	# An now it ours, at last!
	option = {
		name = mirror.4.c
		trigger = {
			ring_has_the_ring = yes
		}
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_war_support = 0.15
			add_political_power = 150
		}
		else = {
			add_war_support = 0.1
			add_political_power = 100
		}
	}
	
	# The Ring has not yet reached Sauron. There may yet be hope.
	option = {
		name = mirror.4.do
		trigger = {
			NOT = { MOR = { ring_has_the_ring = yes } }
		}
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_political_power = 150
		}
		else = {
			add_political_power = 100
		}
	}



}

# Visions of the fallen city of Gondolin
country_event = {
	id = mirror.5
	title = mirror.5.t
	desc = mirror.5.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A stirring sight for any proud Noldorin!
	option = {
		name = mirror.5.a
		lthi_increase_influence_noldor_intermediate = yes
		if = {
			limit = {
				NOT = { has_country_flag = mirror_has_had_influence_vision }
				has_completed_focus = lth_mirrorupgrade
			}
			multiply_variable = { var:lthi_noldor_bonus_factoryoutput = 1.2 }
			multiply_variable = { var:lthi_noldor_bonus_breakthrough = 1.2 }
			multiply_variable = { var:lthi_noldor_bonus_attack = 1.2 }
			custom_effect_tooltip = increase_noldor_bonus_20p_tt
		}
		else_if = {
			limit = { NOT = { has_country_flag = mirror_has_had_influence_vision } }
			multiply_variable = { var:lthi_noldor_bonus_factoryoutput = 1.3 }
			multiply_variable = { var:lthi_noldor_bonus_breakthrough = 1.3 }
			multiply_variable = { var:lthi_noldor_bonus_attack = 1.3 }
			custom_effect_tooltip = increase_noldor_bonus_30p_tt
		}
	}
	
}

# Visions of Beren and LÃºthien
country_event = {
	id = mirror.6
	title = mirror.6.t
	desc = mirror.6.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A reminder that not all victories are without cost. Our peredhil compatriots be blessed!
	option = {
		name = mirror.6.a
		lthi_increase_influence_halfelves_intermediate = yes
		if = {
			limit = {
				NOT = { has_country_flag = mirror_has_had_influence_vision }
				has_completed_focus = lth_mirrorupgrade
			}
			multiply_variable = { var:lthi_halfelves_bonus_factoryoutput = 1.2 }
			multiply_variable = { var:lthi_halfelves_bonus_breakthrough = 1.2 }
			multiply_variable = { var:lthi_halfelves_bonus_attack = 1.2 }
			custom_effect_tooltip = increase_halfelves_bonus_20p_tt
		}
		else_if = {
			limit = { NOT = { has_country_flag = mirror_has_had_influence_vision } }
			multiply_variable = { var:lthi_halfelves_bonus_factoryoutput = 1.3 }
			multiply_variable = { var:lthi_halfelves_bonus_breakthrough = 1.3 }
			multiply_variable = { var:lthi_halfelves_bonus_attack = 1.3 }
			custom_effect_tooltip = increase_halfelves_bonus_30p_tt
		}
	}
	
}

# Visions of the first settlers
country_event = {
	id = mirror.7
	title = mirror.7.t
	desc = mirror.7.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# It is a stirring sight, to glance upon the ancestors our people.
	option = {
		name = mirror.7.a
		lthi_increase_influence_nandor_intermediate = yes
		if = {
			limit = {
				NOT = { has_country_flag = mirror_has_had_influence_vision }
				has_completed_focus = lth_mirrorupgrade
			}
			multiply_variable = { var:lthi_nandor_bonus_factoryoutput = 1.2 }
			multiply_variable = { var:lthi_nandor_bonus_breakthrough = 1.2 }
			multiply_variable = { var:lthi_nandor_bonus_attack = 1.2 }
			custom_effect_tooltip = increase_nandor_bonus_20p_tt
		}
		else_if = {
			limit = { NOT = { has_country_flag = mirror_has_had_influence_vision } }
			multiply_variable = { var:lthi_nandor_bonus_factoryoutput = 1.3 }
			multiply_variable = { var:lthi_nandor_bonus_breakthrough = 1.3 }
			multiply_variable = { var:lthi_nandor_bonus_attack = 1.3 }
			custom_effect_tooltip = increase_nandor_bonus_30p_tt
		}
	}
	
}

# Visions of the kingdom of Doriath
country_event = {
	id = mirror.8
	title = mirror.8.t
	desc = mirror.8.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A depiction of the true potential held by the Sindar.
	option = {
		name = mirror.8.a
		lthi_increase_influence_sindar_intermediate = yes
		if = {
			limit = {
				NOT = { has_country_flag = mirror_has_had_influence_vision }
				has_completed_focus = lth_mirrorupgrade
			}
			multiply_variable = { var:lthi_sindar_bonus_factoryoutput = 1.2 }
			multiply_variable = { var:lthi_sindar_bonus_breakthrough = 1.2 }
			multiply_variable = { var:lthi_sindar_bonus_attack = 1.2 }
			custom_effect_tooltip = increase_sindar_bonus_20p_tt
		}
		else_if = {
			limit = { NOT = { has_country_flag = mirror_has_had_influence_vision } }
			multiply_variable = { var:lthi_sindar_bonus_factoryoutput = 1.3 }
			multiply_variable = { var:lthi_sindar_bonus_breakthrough = 1.3 }
			multiply_variable = { var:lthi_sindar_bonus_attack = 1.3 }
			custom_effect_tooltip = increase_sindar_bonus_30p_tt
		}
	}
	
}

# Visions of the Eye
country_event = {
	id = mirror.9
	title = mirror.9.t
	desc = mirror.9.d

	picture = GFX_report_event_sauron_eye

	is_triggered_only = yes

	# It... it was just a vision, right?
	option = {
		name = mirror.9.a
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			ring_corruption_percentage_up = yes
		}
		else = {
			ring_corruption_percentage_up_20 = yes
		}
	}
	
}

# Visions of the Eye
country_event = {
	id = mirror.10
	title = mirror.10.t
	desc = mirror.10.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Nice try, Sauron.
	option = {
		name = mirror.10.a
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			ring_corruption_percentage_down_20 = yes
		}
		else = {
			ring_corruption_percentage_down = yes
		}
	}
	
}

# Visions of Mordor
country_event = {
	id = mirror.11
	title = mirror.11.t
	desc = mirror.11.d

	picture = GFX_report_event_sauron_eye

	is_triggered_only = yes

	# The vision has provided useful insight into what is happening in Mordor.
	option = {
		name = mirror.11.a
		MOR = {
			give_intel_on_country = yes
			if = {
				limit = { has_completed_focus = lth_mirrorupgrade }
				give_steal_tech_from_country = yes 
			}
		}
	}
	
}

# Visions of Gondor
country_event = {
	id = mirror.12
	title = mirror.12.t
	desc = mirror.12.d

	picture = GFX_report_event_gondor

	is_triggered_only = yes

	# The vision has provided useful insight into what is happening in Gondor.
	option = {
		name = mirror.12.a
		GON = {
			give_intel_on_country = yes
			if = {
				limit = { has_completed_focus = lth_mirrorupgrade }
				give_steal_tech_from_country = yes 
			}
		}
	}
	
}

# Visions of Erebor
country_event = {
	id = mirror.13
	title = mirror.13.t
	desc = mirror.13.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The vision has provided useful insight into what the dwarves are up to.
	option = {
		name = mirror.13.a
		ERE = {
			give_intel_on_country = yes
			if = {
				limit = { has_completed_focus = lth_mirrorupgrade }
				give_steal_tech_from_country = yes 
			}
		}
	}
	
}

# Visions of Angmar
country_event = {
	id = mirror.14
	title = mirror.14.t
	desc = mirror.14.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The vision provides a clear image of the situation in Angmar.
	option = {
		name = mirror.14.a
		ANG = {
			give_intel_on_country = yes
			if = {
				limit = { has_completed_focus = lth_mirrorupgrade }
				give_steal_tech_from_country = yes 
			}
		}
	}
	
}

# Visions of confusion
country_event = {
	id = mirror.15
	title = mirror.15.t
	desc = mirror.15.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# There is nothing to be learnt of these visions.
	option = {
		name = mirror.15.a
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_political_power = 50
		}
	}
	
}

# Visions of knowledge
country_event = {
	id = mirror.16
	title = mirror.16.t
	desc = mirror.16.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# This could be useful.
	option = {
		name = mirror.16.a
		custom_effect_tooltip = spark_of_genius_timeout_tooltip
		hidden_effect = {
			random_list = {
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_infantry_weapons } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_infantry_archery } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_support_tech } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_cavalry_carriages } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_cavalry_archers } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_cavalry_light } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_cavalry_lancer } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_cavalry_heavy } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_machines_ballista } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_machines_siege_equipment } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_knowledge_alchemy } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_knowledge_scriptorium } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_knowledge_intrigue } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_labour_metalworking } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_labour_construction } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_labour_farming } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_sailing_longship } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_sailing_galley } }
			10 = { add_tech_bonus = { bonus = 0.5 uses = 1 name = "The Mirror's Vision" category = lotr_sailing_sailingship } }
		}	
		}
	}
	
}

# Visions of triumph
country_event = {
	id = mirror.17
	title = mirror.17.t
	desc = mirror.17.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A testament to the unbreakable will of LothlÃ³rien!
	option = {
		name = mirror.17.a
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = increased_attack days = 90 }
		}
		else = { add_timed_idea = { idea = increased_attack days = 60 } }
	}
	
}

# Visions of austerity
country_event = {
	id = mirror.18
	title = mirror.18.t
	desc = mirror.18.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A testament to LothlÃ³rien's tenacious spirit!
	option = {
		name = mirror.18.a
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_timed_idea = { idea = increased_austerity days = 90 }
		}
		else = { add_timed_idea = { idea = increased_austerity days = 60 } }
	}
	
}

# Visions of the fall of [FROM.GetName]
country_event = {
	id = mirror.19
	title = mirror.19.t
	desc = mirror.19.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A stirring sight, to glance upon the upturned faces of the dead...
	option = {
		name = mirror.19.a
		add_popularity = { ideology = unaligned popularity = 0.1 }
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_stability = 0.1
			add_political_power = 150
		}
		else = {
			add_stability = 0.05
			add_political_power = 100
		}
	}
	
	# Another enemy bites the dust.
	option = {
		name = mirror.19.b
		trigger = {
			has_war_with = FROM
		}
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_war_support = 0.15
		}
		else = {
			add_war_support = 0.1
		}
	}
	
	# They will be avenged.
	option = {
		name = mirror.19.c
		trigger = {
			is_ally_with = FROM
		}
		if = {
			limit = { has_completed_focus = lth_mirrorupgrade }
			add_war_support = 0.15
		}
		else = {
			add_war_support = 0.1
		}
	}
	


}

# Visions of a magical mound
country_event = {
	id = mirror.20
	title = mirror.20.t
	desc = mirror.20.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Locate this mound immediately.
	option = {
		name = mirror.20.a
		trigger = {
			NOT = { has_country_flag = m_storyline_giant_knows_about_missing_scouts }
			NOT = { has_country_flag = m_storyline_giant_knows_about_giant }
		}
		hidden_effect = { country_event = { id = mirror.43 days = 20 random_days = 20 } }
	}
	
	# This may be related to the missing scouts. Locate this mound immediately.
	option = {
		name = mirror.20.b
		trigger = {
			has_country_flag = m_storyline_giant_knows_about_missing_scouts
			NOT = { has_country_flag = m_storyline_giant_knows_about_giant }
		}
		hidden_effect = { country_event = { id = mirror.43 days = 20 random_days = 20 } }
	}

	# Its the giant
	option = {
		name = mirror.20.c
		trigger = {
			has_country_flag = m_storyline_giant_knows_about_giant
		}
		hidden_effect = { country_event = { id = mirror.44 days = 20 random_days = 20 } }
	}
	
	# We have more important things to attend to.
	option = {
		name = mirror.20.do
	}
}

# Visions of a giant
country_event = {
	id = mirror.21
	title = mirror.21.t
	desc = mirror.21.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The magical mound! It is burried giant, stirring to wake. We must prepare for this calamity.
	option = {
		name = mirror.21.a
		trigger = {
			has_country_flag = m_storyline_giant_knows_about_mound
		}
		country_event = { id = mirror.44 days = 14 }
	}
	
	# A harrowing sight. We will have to consult the mirror more closely on this.
	option = {
		name = mirror.21.b
	}
}

# Visions of an elf (giant researcher)
country_event = {
	id = mirror.22
	title = mirror.22.t
	desc = mirror.22.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Locate this elf immediately. We may require his unique knowledge.
	option = {
		name = mirror.22.a
		hidden_effect = { country_event = { id = mirror.47 days = 20 random_days = 20 } }
	}
	
}

# Visions of a dark rift
country_event = {
	id = mirror.23
	title = mirror.23.t
	desc = mirror.23.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# It is this rift what is causing the trees to fade. We must seal it as soon as possible.
	option = {
		name = mirror.23.a
		trigger = {
			NOT = { has_country_flag = m_storyline_illness_knows_about_historian }
		}
		set_country_flag = m_storyline_illness_knows_about_rift
	}

	# Ask historian
	option = {
		name = mirror.23.b
		trigger = {
			has_country_flag = m_storyline_illness_knows_about_historian
		}
		set_country_flag = m_storyline_illness_knows_about_rift
		country_event = { id = mirror.39 days = 10 random_days = 10 }
	}
	
}

# Visions of an elf
country_event = {
	id = mirror.24
	title = mirror.24.t
	desc = mirror.24.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Seek out this historian. He may be able to help us.
	option = {
		name = mirror.24.a
		if = {
			limit = { has_country_flag = m_storyline_illness_knows_about_rift }
			hidden_effect = { country_event = { id = mirror.39 days = 10 random_days = 20 } }
		}
	}
	
}

# Visions of an ancient ritual
country_event = {
	id = mirror.25
	title = mirror.25.t
	desc = mirror.25.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# This ritual might be useful. Search the archives for information.
	option = {
		name = mirror.25.a
		hidden_effect = { country_event = { id = mirror.33 days = 60 random_days = 30 } }
		add_timed_idea = { idea = minor_research_expense days = 60 }
		custom_effect_tooltip = mirror.25.a_tt
		set_country_flag = m_storyline_ritual_knows_about_ritual
	}
	
	# What a waste of time.
	option = {
		name = mirror.25.b
		mirror_end_storyline = yes
	}
	

}

# The mirror asks for a name
country_event = {
	id = mirror.26
	title = mirror.26.t
	desc = mirror.26.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Name1
	option = {
		name = mirror.26.a
		set_variable = { m_storyline_ritual_chosen = var:m_storyline_ritual_spoken_name1 }
		var:m_storyline_ritual_chosen = {
			set_character_flag = m_storyline_ritual_is_chosen
		}
		hidden_effect = { country_event = { id = mirror.30 days = 1 } }
		set_country_flag = m_storyline_ritual_has_given_name
	}
	
	# Name2
	option = {
		name = mirror.26.b
		set_variable = { m_storyline_ritual_chosen = var:m_storyline_ritual_spoken_name2 }
		var:m_storyline_ritual_chosen = {
			set_character_flag = m_storyline_ritual_is_chosen
		}
		hidden_effect = { country_event = { id = mirror.30 days = 1 } }
		set_country_flag = m_storyline_ritual_has_given_name
	}
	
	# Name3
	option = {
		name = mirror.26.c
		set_variable = { m_storyline_ritual_chosen = var:m_storyline_ritual_spoken_name3 }
		var:m_storyline_ritual_chosen = {
			set_character_flag = m_storyline_ritual_is_chosen
		}
		hidden_effect = { country_event = { id = mirror.30 days = 1 } }
		set_country_flag = m_storyline_ritual_has_given_name
	}
	
	# We will name nobody.
	option = {
		name = mirror.26.do
		set_country_flag = m_storyline_ritual_has_given_name
	}



}

# Visions of a mysterious stanger
country_event = {
	id = mirror.27
	title = mirror.27.t
	desc = mirror.27.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Curious.
	option = {
		name = mirror.27.a
		set_country_flag = m_storyline_plot_mystery_man
		hidden_effect = { country_event = { id = mirror.55 days = 30 random_days = 60 } }
	}
	
}

# Visions of victory and death
country_event = {
	id = mirror.28
	title = mirror.28.t
	desc = mirror.28.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The mirror appears to have chosen one of our generals, and doomed the other.
	option = {
		name = mirror.28.a
		set_country_flag = m_storyline_plot_knows_mirrors_chosen_and_doomed
		var:m_storyline_pot_mirrors_chosen = {
			add_unit_leader_trait = mirrors_chosen
		}
		var:m_storyline_pot_mirrors_doomed = {
			add_unit_leader_trait = mirrors_doomed
		}

		hidden_effect = {
			country_event = { id = mirror.53 days = 30 random_days = 70 }
		}
	}
	
}

# Visions of a secret plot
country_event = {
	id = mirror.29
	title = mirror.29.t
	desc = mirror.29.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A worrying vision. Could our fellow elves really be this treacherous?
	option = {
		name = mirror.29.a
		set_country_flag = m_storyline_plot_knows_about_plot
		add_stability = -0.1
		hidden_effect = {
			# It is time for the plot to unfold
			if = {
				limit = {
					has_country_flag = m_storyline_plot_mirrors_cult_formed
					has_country_flag = m_storyline_plot_mystery_man_arrived
					NOT = { has_country_flag = m_storyline_plot_plot_in_motion }
				}
				set_country_flag = m_storyline_plot_plot_in_motion
				random_list = {
					# mysterious stranger is plotter, thwarted by cult
					6 = {
						country_event = { id = mirror.57 days = 30 random_days = 60 }
					}
					# cult is plotter, thwarted by stranger
					10 = {
						country_event = { id = mirror.56 days = 30 random_days = 60 }
					}
					# stranger is plotter, thwarted by doomed
					6 = {
						modifier = {
							factor = 0
							has_country_flag = m_storyline_plot_mirrors_doomed_executed
						}
						country_event = { id = mirror.58 days = 30 random_days = 60 }
					}
				}
			}
		}
	}
	
}

# Nothing happens
country_event = {
	id = mirror.30
	title = mirror.30.t
	desc = mirror.30.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Strange.
	option = {
		name = mirror.30.a
		hidden_effect = {
			random_list = {
				10 = {
					hidden_effect = { country_event = { id = mirror.31 days = 20 random_days = 20 } }
				}
				10 = {
					hidden_effect = { country_event = { id = mirror.32 days = 20 random_days = 20 } }
				}
			}
		}
	}
	
}

# Doomed turns up dead
country_event = {
	id = mirror.31
	title = mirror.31.t
	desc = mirror.31.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# It couldn't have been... the mirror?
	option = {
		name = mirror.31.a
		var:m_storyline_ritual_chosen = {
			mirror_storyline_ritual_kill = yes
		}
	}
	
}

# Chosen revitalized
country_event = {
	id = mirror.32
	title = mirror.32.t
	desc = mirror.32.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The mirror's blessing.
	option = {
		name = mirror.32.a
		var:m_storyline_ritual_chosen = {
			mirror_storyline_ritual_give_buff = yes
		}
	}
	
}

# Information on the ancient ritual found
country_event = {
	id = mirror.33
	title = mirror.33.t
	desc = mirror.33.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Begin searching for this rune.
	option = {
		name = mirror.33.a
		trigger = {
			NOT = { has_country_flag = m_storyline_ritual_rune_found }
		}
		hidden_effect = { country_event = { id = mirror.35 days = 60 random_days = 30 } }
		add_timed_idea = { idea = minor_expense days = 60 }
		custom_effect_tooltip = mirror.33.a_tt
		set_country_flag = m_storyline_ritual_knows_about_rune
	}

	# We already have this rune. Let's start the ritual
	option = {
		name = mirror.33.b
		trigger = {
			has_country_flag = m_storyline_ritual_rune_found
		}
		country_event = { id = mirror.36 days = 5 }
		set_country_flag = m_storyline_ritual_knows_about_rune
	}
	
	# We have no need of ancient rituals
	option = {
		name = mirror.33.c
		mirror_end_storyline = yes
		set_country_flag = m_storyline_ritual_knows_about_rune
	}
	

}

# Visions of an enigmatic rune
country_event = {
	id = mirror.34
	title = mirror.34.t
	desc = mirror.34.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# That's the rune we've been looking for.
	option = {
		name = mirror.34.a
		trigger = {
			has_country_flag = m_storyline_ritual_knows_about_rune
		}
		set_country_flag = m_storyline_ritual_knows_about_rune
		country_event = { id = mirror.35 days = 1 }
	}
	
	# We should retrieve this rune. It could be of use.
	option = {
		name = mirror.34.b
		trigger = {
			NOT = { has_country_flag = m_storyline_ritual_knows_about_rune }
		}
		set_country_flag = m_storyline_ritual_knows_about_rune
		country_event = { id = mirror.35 days = 14 }
	}
	

}

# Rune found
country_event = {
	id = mirror.35
	title = mirror.35.t
	desc = mirror.35.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes
	fire_only_once = yes

	# Great! Let's begin, then.
	option = {
		name = mirror.35.a
		country_event = { id = mirror.36 days = 14 }
		set_country_flag = m_storyline_ritual_rune_found
	}
	
}

# The ritual
country_event = {
	id = mirror.36
	title = mirror.36.t
	desc = mirror.36.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [Previously Chosen Guy .GetName]
	option = {
		name = mirror.36.a
		trigger = {
			has_country_flag = m_storyline_ritual_chosen_buffed
		}
		random_list = {
			50 = {
				var:m_storyline_ritual_chosen = {
					mirror_storyline_ritual_give_buff = yes
				}
			}
			30 = {
				var:m_storyline_ritual_chosen = {
					mirror_storyline_ritual_kill = yes
				}
			}
		}
		mirror_end_storyline = yes
	}
	
	# Find someone else
	option = {
		name = mirror.36.b
		trigger = {
			has_country_flag = m_storyline_ritual_chosen_buffed
		}
		random_unit_leader = {
			limit = { NOT = { has_character_flag = m_storyline_ritual_chosen } }
			random_list = {
				50 = {
					mirror_storyline_ritual_give_buff = yes
				}
				30 = {
					mirror_storyline_ritual_kill = yes
				}
			}
		}
		mirror_end_storyline = yes
	}
	
	# find a volunteer
	option = {
		name = mirror.36.c
		trigger = {
			NOT = { has_country_flag = m_storyline_ritual_chosen_buffed }
		}
		random_unit_leader = {
			limit = { NOT = { has_character_flag = m_storyline_ritual_chosen } }
			random_list = {
				50 = {
					mirror_storyline_ritual_give_buff = yes
				}
				10 = {
					mirror_storyline_ritual_kill = yes
				}
			}
		}
		mirror_end_storyline = yes
	}
	
	# On a second thought, this ritual is too dangerous.
	option = {
		name = mirror.36.do
		mirror_end_storyline = yes
	}
}

# Fading of the Mallorn Trees
country_event = {
	id = mirror.37
	title = mirror.37.t
	desc = mirror.37.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = m_storyline_illness_completed }
	}

	# We should consult the mirror on this.
	option = {
		name = mirror.37.a
		add_ideas = LTH_fading_trees
		hidden_effect = { country_event = { id = mirror.38 days = 60 random_days = 60 } }
		set_country_flag = m_storyline_illness_knows_about_illness
	}
	
}

# Sickness spreading among the elves
country_event = {
	id = mirror.38
	title = mirror.38.t
	desc = mirror.38.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = m_storyline_illness_completed }
	}

	# It's the fading of the Mallorn trees. We need to seal the rift soon.
	option = {
		trigger = {
			has_country_flag = m_storyline_illness_knows_about_rift
		}
		name = mirror.38.a
		swap_ideas = {
			remove_idea = LTH_fading_trees
			add_idea = LTH_fading_trees_2
		}
	}
	
	# This is beginning to be very serious. We should consult the mirror on this matter.
	option = {
		trigger = {
			NOT = { has_country_flag = m_storyline_illness_knows_about_rift }
		}
		name = mirror.38.b
		swap_ideas = {
			remove_idea = LTH_fading_trees
			add_idea = LTH_fading_trees_2
		}
	}
	

}

# The reclusive historian
country_event = {
	id = mirror.39
	title = mirror.39.t
	desc = mirror.39.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Sealing it is sufficient
	option = {
		name = mirror.39.a
		add_ideas = reclusive_historian_idea
		if = {
			limit = { has_idea = LTH_fading_trees_2 }
			remove_ideas = LTH_fading_trees_2
		}
		if = {
			limit = { has_idea = LTH_fading_trees }
			remove_ideas = LTH_fading_trees
		}
		mirror_end_storyline = yes
	}
	
	# We can never have enough protective enchantments.
	option = {
		name = mirror.39.b
		add_political_power = -200
		add_timed_idea = { idea = minor_expense days = 60 }
		add_ideas = reclusive_historian_idea
		if = {
			limit = { has_idea = LTH_fading_trees_2 }
			remove_ideas = LTH_fading_trees_2
		}
		if = {
			limit = { has_idea = LTH_fading_trees }
			remove_ideas = LTH_fading_trees
		}
		add_ideas = LTH_fading_trees_protective_enchantment
		mirror_end_storyline = yes
	}
	

}

# Missing Scouts
country_event = {
	id = mirror.41
	title = mirror.41.t
	desc = mirror.41.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = m_storyline_giant_completed }
	}

	# Unusual. We should consult Galadriel's mirror on this.
	option = {
		name = mirror.41.a
		set_country_flag = m_storyline_giant_knows_about_missing_scouts
		add_manpower = -500
		hidden_effect = { country_event = { id = mirror.42 days = 60 random_days = 30 } }
	}
	
}

# Unusual Wildlife Behaviour
country_event = {
	id = mirror.42
	title = mirror.42.t
	desc = mirror.42.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = m_storyline_giant_completed }
	}

	# Something dangerous is stirring in the woods.
	option = {
		name = mirror.42.a
		add_stability = -0.1
	}
	
}

# Mound located
country_event = {
	id = mirror.43
	title = mirror.43.t
	desc = mirror.43.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Investigate it.
	option = {
		name = mirror.43.a
		hidden_effect = { country_event = { id = mirror.46 days = 2 } }
	}
	
}

# Dormant giant located
country_event = {
	id = mirror.44
	title = mirror.44.t
	desc = mirror.44.d

	picture = GFX_report_event_mirror

	trigger = {
		NOT = { has_country_flag = m_storyline_giant_completed }
	}

	is_triggered_only = yes

	# Investigate it, carefully.
	option = {
		name = mirror.44.a
		hidden_effect = { country_event = { id = mirror.45 days = 5 } }
	}
	
	# It is too dangerous. We must wait for more information.
	option = {
		name = mirror.44.b
		set_country_flag = m_storyline_giant_knows_about_giant
	}
	

}

# The giant stirs
country_event = {
	id = mirror.45
	title = mirror.45.t
	desc = mirror.45.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Attack it with everything we have!
	option = {
		name = mirror.45.a
		add_manpower = -500
		random_list = {
			20 = {
				country_event = mirror.49
			}
			80 = {
				country_event = mirror.48
				add_ideas = LTH_loose_giant
				set_country_flag = m_storyline_giant_has_failed
			}
		}
	}
	
	# The Giantslayer arrows! Use them!
	option = {
		trigger = {
			has_country_flag = m_storyline_giant_arrows
		}
		name = mirror.45.b
		country_event = mirror.49
	}
	
	# The control rod! Use it now!
	option = {
		trigger = {
			has_country_flag = m_storyline_giant_rod
		}
		name = mirror.45.c
		country_event = mirror.50
	}
}

# A giant stirs
country_event = {
	id = mirror.46
	title = mirror.46.t
	desc = mirror.46.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Attack it with everything we have!
	option = {
		name = mirror.46.a
		add_manpower = -500
		random_list = {
			20 = {
				country_event = mirror.49
			}
			80 = {
				country_event = mirror.48
				add_ideas = LTH_loose_giant
			}
		}
	}
	
	# Retreat!
	option = {
		name = mirror.46.b
		add_political_power = -50
		set_country_flag = m_storyline_giant_has_failed
		add_ideas = LTH_loose_giant
	}
	
	# The control rod! Use it now!
	option = {
		trigger = {
			has_country_flag = m_storyline_giant_arrows
		}
		name = mirror.46.c
		country_event = mirror.49
	}
	
	# The giantslayer arrows! Use them!
	option = {
		name = mirror.46.do
		trigger = {
			has_country_flag = m_storyline_giant_rod
		}
		country_event = mirror.50
	}



}

# Elf located
country_event = {
	id = mirror.47
	title = mirror.47.t
	desc = mirror.47.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The giantslayer arrows will be useful either way.
	option = {
		name = mirror.47.a
		add_ideas = giants_researcher_idea
		set_country_flag = m_storyline_giant_arrows
	}
	
	# The control rod could prove useful.
	option = {
		name = mirror.47.b
		add_ideas = giants_researcher_idea
		set_country_flag = m_storyline_giant_rod
	}
	

}

# The giant tears through our forces
country_event = {
	id = mirror.48
	title = mirror.48.t
	desc = mirror.48.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Unfortunate. We will have to find a different way.
	option = {
		name = mirror.48.a
		add_manpower = -500
		set_country_flag = m_storyline_giant_has_failed
	}
	
}

# The giant falls
country_event = {
	id = mirror.49
	title = mirror.49.t
	desc = mirror.49.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A testament to the skill of our soldiers.
	option = {
		name = mirror.49.a
		add_ideas = LTH_giant_slayer
		mirror_end_storyline = yes
		if = {
			limit = { has_idea = LTH_loose_giant }
			remove_ideas = LTH_loose_giant
		}
	}
	
}

# The giant under our control
country_event = {
	id = mirror.50
	title = mirror.50.t
	desc = mirror.50.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Fascinating.
	option = {
		name = mirror.50.a
		load_oob = Lothlorien_Giant
		mirror_end_storyline = yes
		if = {
			limit = { has_idea = LTH_loose_giant }
			remove_ideas = LTH_loose_giant
		}
	}
	
}

# Caladion asks for permission to look into Galadriel's mirror
country_event = {
	id = mirror.51
	title = mirror.51.t
	desc = mirror.51.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	trigger = {
		has_country_flag = m_storyline_plot
	}

	# We shall allow this.
	option = {
		name = mirror.51.a
		set_country_flag = m_storyline_plot_mystery_man_looked_into_mirror
		country_event = { id = mirror.52 days = 2 }
	}
	
	# Not happening.
	option = {
		name = mirror.51.b

		hidden_effect = {
			# It is time for the plot to unfold
			if = {
				limit = {
					has_country_flag = m_storyline_plot_mirrors_cult_formed
					has_country_flag = m_storyline_plot_knows_about_plot
					NOT = { has_country_flag = m_storyline_plot_plot_in_motion }
				}
				set_country_flag = m_storyline_plot_plot_in_motion
				random_list = {
					# mysterious stranger is plotter, thwarted by cult
					10 = {
						country_event = { id = mirror.57 days = 60 random_days = 30 }
					}
					# cult is plotter, thwarted by stranger
					5 = {
						country_event = { id = mirror.56 days = 60 random_days = 30 }
					}
					# stranger is plotter, thwarted by doomed
					10 = {
						modifier = {
							factor = 0
							has_country_flag = m_storyline_plot_mirrors_doomed_executed
						}
						country_event = { id = mirror.58 days = 60 random_days = 30 }
					}
				}
			}
		}
	}
	

}

# Caladion's vision
country_event = {
	id = mirror.52
	title = mirror.52.t
	desc = mirror.52.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Mysterious.
	option = {
		name = mirror.52.a
		hidden_effect = {
			# It is time for the plot to unfold
			if = {
				limit = {
					has_country_flag = m_storyline_plot_mirrors_cult_formed
					has_country_flag = m_storyline_plot_knows_about_plot
					NOT = { has_country_flag = m_storyline_plot_plot_in_motion }
				}
				set_country_flag = m_storyline_plot_plot_in_motion
				random_list = {
					# mysterious stranger is plotter, thwarted by cult
					5 = {
						country_event = { id = mirror.57 days = 60 random_days = 30 }
					}
					# cult is plotter, thwarted by stranger
					35 = {
						country_event = { id = mirror.56 days = 60 random_days = 30 }
					}
					# stranger is plotter, thwarted by doomed
					5 = {
						modifier = {
							factor = 0
							has_country_flag = m_storyline_plot_mirrors_doomed_executed
						}
						country_event = { id = mirror.58 days = 60 random_days = 30 }
					}
				}
			}
		}
	}
	
}

# A mysterious group of warriors arrive
country_event = {
	id = mirror.53
	title = mirror.53.t
	desc = mirror.53.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# So long as they fight for our side...
	option = {
		name = mirror.53.a
		set_country_flag = m_storyline_plot_mirrors_cult_formed
		load_oob = Lothlorien_MirrorsCult
		hidden_effect = {
			random_list = {
				40 = {
					country_event = { id = mirror.54 days = 60 random_days = 60 }
				}
				20 = { }
			}
		}
	}
	
}

# The mirror's cult demand the execution of Doomed
country_event = {
	id = mirror.54
	title = mirror.54.t
	desc = mirror.54.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	trigger = {
		has_country_flag = m_storyline_plot
	}

	# They are in no place to make demands of this sort.
	option = {
		name = mirror.54.a
		add_political_power = -50

		hidden_effect = {
			# It is time for the plot to unfold
			if = {
				limit = {
					has_country_flag = m_storyline_plot_mystery_man_arrived
					has_country_flag = m_storyline_plot_knows_about_plot
					NOT = { has_country_flag = m_storyline_plot_plot_in_motion }
				}
				set_country_flag = m_storyline_plot_plot_in_motion
				random_list = {
					# mysterious stranger is plotter, thwarted by cult
					5 = {
						country_event = { id = mirror.57 days = 60 random_days = 60 }
					}
					# cult is plotter, thwarted by stranger
					20 = {
						country_event = { id = mirror.56 days = 60 random_days = 60 }
					}
					# stranger is plotter, thwarted by doomed
					5 = {
						modifier = {
							factor = 0
							has_country_flag = m_storyline_plot_mirrors_doomed_executed
						}
						country_event = { id = mirror.58 days = 60 random_days = 60 }
					}
				}
			}
		}
	}
	
	# Perhaps it is for the better.
	option = {
		name = mirror.54.b
		var:m_storyline_pot_mirrors_doomed = {
			kill_character = yes
		}
		set_country_flag = m_storyline_plot_mirrors_doomed_executed
		hidden_effect = {
			# It is time for the plot to unfold
			if = {
				limit = {
					has_country_flag = m_storyline_plot_mystery_man_arrived
					has_country_flag = m_storyline_plot_knows_about_plot
					NOT = { has_country_flag = m_storyline_plot_plot_in_motion }
				}
				set_country_flag = m_storyline_plot_plot_in_motion
				random_list = {
					# mysterious stranger is plotter, thwarted by cult
					20 = {
						country_event = { id = mirror.57 days = 90 random_days = 60 }
					}
					# cult is plotter, thwarted by stranger
					5 = {
						country_event = { id = mirror.56 days = 90 random_days = 60 }
					}
				}
			}
		}
	}
}

# Mysterious elf arrives
country_event = {
	id = mirror.55
	title = mirror.55.t
	desc = mirror.55.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Put him to work.
	option = {
		name = mirror.55.a
		add_ideas = mysterious_stranger_idea
		set_country_flag = m_storyline_plot_mystery_man_arrived
		hidden_effect = {
			random_list = {
				40 = {
					country_event = { id = mirror.51 days = 60 random_days = 60 }
				}
				20 = { }
			}
		}
	}
	
	# Keep an eye on him.
	option = {
		name = mirror.55.b
		set_country_flag = m_storyline_plot_mystery_man_arrived
		hidden_effect = {
			random_list = {
				20 = {
					country_event = { id = mirror.51 days = 60 random_days = 60 }
				}
				40 = { }
			}
		}
	}
	

}

# Secret plot by cult thwarted by Caladion
country_event = {
	id = mirror.56
	title = mirror.56.t
	desc = mirror.56.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A close shave. Caladion has earned our gratitude.
	option = {
		name = mirror.56.a
		var:m_storyline_pot_mirrors_chosen = {
			kill_character = yes
		}
		delete_unit_template_and_units = { division_template = "Mirror's Cult" disband = yes }
		add_stability = 0.2
		add_political_power = 150
		mirror_end_storyline = yes
	}
	
}

# Secret plot stragner thwarted by the Mirror's Chosen
country_event = {
	id = mirror.57
	title = mirror.57.t
	desc = mirror.57.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A close shave. Chosen deserves our gratitude.
	option = {
		name = mirror.57.a
		remove_ideas = mysterious_stranger_idea
		var:m_storyline_pot_mirrors_chosen = {
			add_skill_level = 1
		}
		add_stability = 0.2
		add_political_power = 150
		mirror_end_storyline = yes
	}
	
}

# Secret plot by stanger thwarted by the Mirror's Doomed
country_event = {
	id = mirror.58
	title = mirror.58.t
	desc = mirror.58.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Doomed dies a hero.
	option = {
		name = mirror.58.a
		remove_ideas = mysterious_stranger_idea
		var:m_storyline_pot_mirrors_doomed = {
			kill_character = yes
		}
		add_stability = 0.2
		add_political_power = 150
		add_war_support = 0.1
		mirror_end_storyline = yes
	}
	
}

# Secret plot by cult thwarted by the Mirror's Doomed
country_event = {
	id = mirror.59
	title = mirror.59.t
	desc = mirror.59.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Doomed dies a hero.
	option = {
		name = mirror.59.a
		var:m_storyline_pot_mirrors_chosen = {
			kill_character = yes
		}
		delete_unit_template_and_units = { division_template = "Mirror's Cult" disband = yes }
		var:m_storyline_pot_mirrors_doomed = {
			kill_character = yes
		}
		add_stability = 0.2
		add_political_power = 150
		add_war_support = 0.1
		mirror_end_storyline = yes
	}	
}

# The fellowship's path gundabad
country_event = {
	id = mirror.84
	title = mirror.84.t
	desc = mirror.84.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# They may try to bypass the Misty Mountains to the north.
	option = {
		name = mirror.84.a
	}
	
}

# The fellowship's path isengard
country_event = {
	id = mirror.60
	title = mirror.60.t
	desc = mirror.60.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Orthanc? They will likely try to bypass the Misty Mountains to the south.
	option = {
		name = mirror.60.a
	}
	
}

# The fellowship's path redhorn
country_event = {
	id = mirror.61
	title = mirror.61.t
	desc = mirror.61.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# They will move through the Redhorn Pass. That will bring them into our territory.
	option = {
		name = mirror.61.a
	}
	
}


# The fellowship's path is uncertain
country_event = {
	id = mirror.62
	title = mirror.62.t
	desc = mirror.62.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The fellowship's fate remains uncertain.
	option = {
		name = mirror.62.a
	}
	
}

# Ringbearer's Edicts unpopular
country_event = {
	id = mirror.63
	title = mirror.63.t
	desc = mirror.63.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people don't like needless meddling.
	option = {
		name = mirror.63.a
	}
	
}

# Ringbearer's Edicts likely popular
country_event = {
	id = mirror.64
	title = mirror.64.t
	desc = mirror.64.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people like an assertive leader.
	option = {
		name = mirror.64.a
	}
	
}

# Celeborn's edicts likely unpopular
country_event = {
	id = mirror.65
	title = mirror.65.t
	desc = mirror.65.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people don't like needless meddling.
	option = {
		name = mirror.65.a
	}
	
}

# Ringbearer's Edicts likely popular
country_event = {
	id = mirror.66
	title = mirror.66.t
	desc = mirror.66.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people like an assertive leader.
	option = {
		name = mirror.66.a
	}
	
}

# The dark future of [FROM.GetName]
country_event = {
	id = mirror.67
	title = mirror.67.t
	desc = mirror.67.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# A worrying prospect.
	option = {
		name = mirror.67.a
	}
	
}

# The dark future of [FROM.GetName]
country_event = {
	id = mirror.68
	title = mirror.68.t
	desc = mirror.68.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] will stop at nothing.
	option = {
		name = mirror.68.a
	}
	
}

# The dark future of [FROM.GetName]
country_event = {
	id = mirror.69
	title = mirror.69.t
	desc = mirror.69.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] treads a dangerous path.
	option = {
		name = mirror.69.a
	}
	
}

# The chaotic future of [FROM.GetName]
country_event = {
	id = mirror.70
	title = mirror.70.t
	desc = mirror.70.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people of [FROM.GetName] have a precarious future ahead of themselves.
	option = {
		name = mirror.70.a
	}
	
}

# The chaotic future of [FROM.GetName]
country_event = {
	id = mirror.71
	title = mirror.71.t
	desc = mirror.71.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people of [FROM.GetName] seem to want change above all.
	option = {
		name = mirror.71.a
	}
	
}

# The chaotic future of [FROM.GetName]
country_event = {
	id = mirror.72
	title = mirror.72.t
	desc = mirror.72.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Such change rarely comes without bloodshed.
	option = {
		name = mirror.72.a
	}
	
}

# The future of [FROM.GetName]
country_event = {
	id = mirror.73
	title = mirror.73.t
	desc = mirror.73.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] will fight for their freedom.
	option = {
		name = mirror.73.a
	}
	
}

# The future of [FROM.GetName]
country_event = {
	id = mirror.74
	title = mirror.74.t
	desc = mirror.74.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] will not succumb to tyranny without a fight.
	option = {
		name = mirror.74.a
	}
	
}

# The future of [FROM.GetName]
country_event = {
	id = mirror.75
	title = mirror.75.t
	desc = mirror.75.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The people of [FROM.GetName] are determined to keep their freedom.
	option = {
		name = mirror.75.a
	}
	
}

# The future of [FROM.GetName]
country_event = {
	id = mirror.76
	title = mirror.76.t
	desc = mirror.76.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] will try to avoid getting involved.
	option = {
		name = mirror.76.a
	}
	
}

# The future of [FROM.GetName]
country_event = {
	id = mirror.77
	title = mirror.77.t
	desc = mirror.77.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] is hoping to sit this one out
	option = {
		name = mirror.77.a
	}
	
}

# The future of [FROM.GetName]
country_event = {
	id = mirror.78
	title = mirror.78.t
	desc = mirror.78.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# [FROM.GetName] will trend towards neutrality.
	option = {
		name = mirror.78.a
	}
	
}

# The future of [FROM.GetName] uncertain
country_event = {
	id = mirror.79
	title = mirror.79.t
	desc = mirror.79.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# The fate of [FROM.GetName] yet remains to be decided
	option = {
		name = mirror.79.a
	}
	
}

# The future of [FROM.GetName] uncertain
country_event = {
	id = mirror.80
	title = mirror.80.t
	desc = mirror.80.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Who knows what fate has in store for the people of [FROM.GetName]...
	option = {
		name = mirror.80.a
	}
	
}

# The future of [FROM.GetName] uncertain
country_event = {
	id = mirror.81
	title = mirror.81.t
	desc = mirror.81.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# These visions offer nothing of value.
	option = {
		name = mirror.81.a
	}
	
}

# The Vales of Anduin likely to accept elven leadership
country_event = {
	id = mirror.82
	title = mirror.82.t
	desc = mirror.82.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# It would be the right choice
	option = {
		name = mirror.82.a
	}
	
}

# The Vales of Anduin likely to reject elven leadership
country_event = {
	id = mirror.83
	title = mirror.83.t
	desc = mirror.83.d

	picture = GFX_report_event_mirror

	is_triggered_only = yes

	# Let's see how well it serves them.
	option = {
		name = mirror.83.a
	}
	
}
